name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest bandit pip-audit

      - name: Run Unit Tests
        run: pytest tests/ --maxfail=1 --disable-warnings --junitxml=pytest-report.xml -q

      - name: Upload Pytest Report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-report.xml

      - name: Run Bandit Security Scan
        run: bandit -r src/ -f html -o bandit-report-backend.html || true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report-backend
          path: bandit-report-backend.html

      - name: Run pip-audit for dependency vulnerabilities
        run: pip-audit -r requirements.txt -f json -o pip-audit-report.json || true

      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report-backend
          path: pip-audit-report.json

      - name: Set up Docker image tag
        id: vars
        run: echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/code-analyzer-insight:${{ env.TAG }} .

      # - name: Run DAST (OWASP ZAP) against local container
      #   run: |
      #     docker run -d -p 5000:5000 --name test-app ${{ secrets.DOCKERHUB_USERNAME }}/code-analyzer-insight:${{ env.TAG }}
      #     sleep 10
      #     docker run --rm owasp/zap2docker-stable zap-baseline.py -t http://host.docker.internal:5000 -r zap-report.html
      #     docker stop test-app && docker rm test-app

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/code-analyzer-insight:${{ env.TAG }}